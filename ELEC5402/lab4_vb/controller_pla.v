// assign in = {op, state};
// assign {aluop, branch, pcwrite, irwrite, alusrcb, pcsrc, regdst, regwrite,
//         iord, memtoreg, alusrca, memwrite, memread, nextstate} = out;

casez(in)
   10'b??????0000: out <= 23'b00010001010000000010001;
   10'b??????0001: out <= 23'b00010010010000000010010;
   10'b??????0010: out <= 23'b00010100010000000010011;
   10'b??????0011: out <= 23'b00011000010000000010100;
   10'b1000000100: out <= 23'b00000000110000000000101;
   10'b1010000100: out <= 23'b00000000110000000000101;
   10'b0000000100: out <= 23'b00000000110000000001001;
   10'b0001000100: out <= 23'b00000000110000000001011;
   10'b0000100100: out <= 23'b00000000110000000001100;
   10'b1000000101: out <= 23'b00000000100000001000110;
   10'b1010000101: out <= 23'b00000000100000001001000;
   10'b??????0110: out <= 23'b00000000000000100010111;
   10'b??????0111: out <= 23'b00000000000001010000000;
   10'b??????1000: out <= 23'b00000000000000100100000;
   10'b??????1001: out <= 23'b10000000000000001001010;
   10'b??????1010: out <= 23'b00000000000011000000000;
   10'b??????1011: out <= 23'b01100000000100001000000;
   10'b??????1100: out <= 23'b00010000001000000000000;
   default:        out <= 23'bxxxxxxxxxxxxxxxxxxxxxxx;
endcase
